name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'
      - name: Show Java & Maven versions
        run: |
          java -version
          mvn -v    

      - name: Build & unit tests (Maven)
        run: mvn -B -DskipTests=false clean verify

      # ---------- SonarQube (self-hosted) ----------
      # Requires repo secrets:
      #   SONAR_HOST_URL = http://<your-ec2-ip>:9000
      #   SONAR_TOKEN    = <generated in My Account -> Security -> Tokens>
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          # If the repo has sonar-project.properties, this is optional.
          # Keeping args to ensure a stable key/name.
          args: >
            -Dsonar.projectKey=boardgame
            -Dsonar.projectName=Boardgame

      # Option A: separate "Quality Gate" wait step (explicit)
      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # ---------- Build Docker image ----------
      - name: Build Docker image
        run: |
          IMAGE=boardgame:${{ github.sha }}
          docker build -t $IMAGE .

      # ---------- Trivy scan (fail on HIGH/CRITICAL) ----------
      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-v1

      - name: Trivy image scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: boardgame:${{ github.sha }}
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

  # Optional: minimal failure notifier (placeholder – we’ll wire AWS SNS/email tomorrow)
  notify-on-failure:
    needs: build-test-analyze
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Print failure
        run: |
          echo "❌ CI failed for ${{ github.sha }}."
          echo "Sonar/Trivy logs will show the reason."
